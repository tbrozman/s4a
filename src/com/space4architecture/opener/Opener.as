package com.space4architecture.opener {		import com.greensock.TweenLite;	import flash.display.*;	import flash.events.*;	import fl.motion.easing.*;	import flash.utils.Timer;	import com.space4architecture.utils.*;	import com.space4architecture.data.PageData;		public class Opener extends MovieClip	{		private var logoContainer:LogoOpenerContainer;		private var zoomScale:Number;		private var theStage:DisplayObjectContainer;		private var pageData:PageData;		public static const OPENER_COMPLETE:String = "Opener Complete";				private var lineResidential:MovieClip;		private var lineRetail:MovieClip;		private var linePubs:MovieClip;		private var lineProfile:MovieClip;						//CONSTRUCTOR - ADDS CONTAINER		public function Opener($stage:DisplayObjectContainer, $pageData:PageData)		{			logoContainer = new LogoOpenerContainer();			theStage = $stage;			pageData = $pageData;			//addChild(logoContainer);						logoContainer.x = 500;			logoContainer.y = 274;			//logoContainer.width = 140;			//logoContainer.height = 22;			logoContainer.alpha = 1;			//add menu lines			linePubs = pageData.pageObjArray[3].line;			linePubs.x = 161;			linePubs.y = -55;			linePubs.height = 8;			linePubs.width = 54;			linePubs.alpha = 1;			logoContainer.addChild(linePubs);									lineRetail = pageData.pageObjArray[2].line;			lineRetail.x = 161;			lineRetail.y = -38;			lineRetail.height = 8;			lineRetail.width = 54;			lineRetail.alpha = 1;			logoContainer.addChild(lineRetail);						lineProfile = pageData.pageObjArray[1].line;			lineProfile.x = 161;			lineProfile.y = -20;			lineProfile.height = 8;			lineProfile.width = 54;			lineProfile.alpha = 1;			logoContainer.addChild(lineProfile);						lineResidential = pageData.pageObjArray[0].line;			lineResidential.x = 161;			lineResidential.y = -3;			lineResidential.height = 8;			lineResidential.width = 80;			lineResidential.alpha = 1;			logoContainer.addChild(lineResidential);						theStage.addChild(logoContainer);						trace("opener initialized");								}				//ZOOMS CONTAINER		public function beginAnimation():void		{			trace("begin animation");			zoomScale = 5;			TweenLite.from(logoContainer, 48, {width: logoContainer.width / zoomScale, height: logoContainer.height / zoomScale, useFrames:true, ease: Linear.easeNone, onComplete:unparent});				}				//GETS RID OF CONTAINER, TRIGGERS POSITIONING		private function unparent():void		{			trace("unparenting");			var totalChildren:int = logoContainer.numChildren;			for (var i:int = 0; i < totalChildren; i++)			{				var thisChild:DisplayObject = logoContainer.getChildAt(0);				var thisChildPosition:Array = [thisChild.x, thisChild.y]				theStage.addChild(thisChild);				thisChild.x = thisChildPosition[0] + logoContainer.x;				thisChild.y = thisChildPosition[1] + logoContainer.y;						}			theStage.removeChild(logoContainer);			var stallTimer:Timer = new Timer(5000/30, 1);			stallTimer.addEventListener(TimerEvent.TIMER, positionMenu);			stallTimer.start();		}				//MOVES LINES, FADES OUT OTHER STUFF		private function positionMenu(event:TimerEvent):void		{			var objectsToRemove:Array = [theStage.getChildByName('space'), theStage.getChildByName('four'), theStage.getChildByName('line1'), theStage.getChildByName('line2'), theStage.getChildByName('line3')];			var linesToPosition:Array = [linePubs, theStage.getChildByName('lineProfile'), theStage.getChildByName('lineRetail'), theStage.getChildByName('lineResidential')];			var linePositions:Array = [[316, 472], [108, 275], [610, 333], [438, 130]];			// FADE OUT AND REMOVE ELEMENTS WE NO LONGER NEED			for (var i:int = 0; i < objectsToRemove.length; i++)			{				if(i == objectsToRemove.length - 1)				{					TweenLite.to(objectsToRemove[i], 1, {alpha:0, onComplete: removeObjects});				}				else				{					TweenLite.to(objectsToRemove[i], 1, {alpha:0});				}				function removeObjects():void				{					for (var j:int = 0; j < objectsToRemove.length; j++)					{						theStage.removeChild(objectsToRemove[j]);						if(j == objectsToRemove.length - 1){signalComplete();}					}				}				}						//MOVE LINES INTO POSITION			for (var k:int = 0; k < linesToPosition.length; k++)			{				if(k == linesToPosition.length - 1){					TweenLite.to(linesToPosition[k], 1, {height:1, width:184, x:linePositions[k][0], y:linePositions[k][1]});				}				else				{					TweenLite.to(linesToPosition[k], 1, {height:1, width:184, x:linePositions[k][0], y:linePositions[k][1]});				}			}		}				//WE DONE HERE		private function signalComplete():void		{			trace("we done with opener");			dispatchEvent(new Event(OPENER_COMPLETE));		}		}}